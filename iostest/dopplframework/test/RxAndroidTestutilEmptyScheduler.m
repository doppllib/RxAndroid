//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxAndroid/rxandroid/src/test/java/rx/android/testutil/EmptyScheduler.java
//

#include "J2ObjC_source.h"
#include "RxAndroidTestutilEmptyScheduler.h"
#include "RxScheduler.h"
#include "java/lang/UnsupportedOperationException.h"

@implementation RxAndroidTestutilEmptyScheduler

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxAndroidTestutilEmptyScheduler_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (RxScheduler_Worker *)createWorker {
  @throw create_JavaLangUnsupportedOperationException_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxScheduler_Worker;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createWorker);
  #pragma clang diagnostic pop
  static const J2ObjcClassInfo _RxAndroidTestutilEmptyScheduler = { "EmptyScheduler", "rx.android.testutil", NULL, methods, NULL, 7, 0x11, 2, 0, -1, -1, -1, -1, -1 };
  return &_RxAndroidTestutilEmptyScheduler;
}

@end

void RxAndroidTestutilEmptyScheduler_init(RxAndroidTestutilEmptyScheduler *self) {
  RxScheduler_init(self);
}

RxAndroidTestutilEmptyScheduler *new_RxAndroidTestutilEmptyScheduler_init() {
  J2OBJC_NEW_IMPL(RxAndroidTestutilEmptyScheduler, init)
}

RxAndroidTestutilEmptyScheduler *create_RxAndroidTestutilEmptyScheduler_init() {
  J2OBJC_CREATE_IMPL(RxAndroidTestutilEmptyScheduler, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxAndroidTestutilEmptyScheduler)
