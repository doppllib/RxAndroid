//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/RxAndroid/rxandroid/src/test/java/rx/android/schedulers/ResetSchedulersTest.java
//

#include "CoTouchlabDopplTestingDopplRobolectricTestRunner.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RxAndroidPluginsRxAndroidPlugins.h"
#include "RxAndroidPluginsRxAndroidSchedulersHook.h"
#include "RxAndroidSchedulersAndroidSchedulers.h"
#include "RxAndroidSchedulersLooperScheduler.h"
#include "RxAndroidSchedulersResetSchedulersTest.h"
#include "RxScheduler.h"
#include "RxSchedulersTestScheduler.h"
#include "java/lang/annotation/Annotation.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"
#include "org/junit/runner/RunWith.h"

__attribute__((unused)) static IOSObjectArray *RxAndroidSchedulersResetSchedulersTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RxAndroidSchedulersResetSchedulersTest__Annotations$1();

@interface RxAndroidSchedulersResetSchedulersTest_1 : RxAndroidPluginsRxAndroidSchedulersHook {
 @public
  RxSchedulersTestScheduler *val$testScheduler_;
}

- (instancetype)initWithRxSchedulersTestScheduler:(RxSchedulersTestScheduler *)capture$0;

- (RxScheduler *)getMainThreadScheduler;

@end

J2OBJC_EMPTY_STATIC_INIT(RxAndroidSchedulersResetSchedulersTest_1)

__attribute__((unused)) static void RxAndroidSchedulersResetSchedulersTest_1_initWithRxSchedulersTestScheduler_(RxAndroidSchedulersResetSchedulersTest_1 *self, RxSchedulersTestScheduler *capture$0);

__attribute__((unused)) static RxAndroidSchedulersResetSchedulersTest_1 *new_RxAndroidSchedulersResetSchedulersTest_1_initWithRxSchedulersTestScheduler_(RxSchedulersTestScheduler *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxAndroidSchedulersResetSchedulersTest_1 *create_RxAndroidSchedulersResetSchedulersTest_1_initWithRxSchedulersTestScheduler_(RxSchedulersTestScheduler *capture$0);

@implementation RxAndroidSchedulersResetSchedulersTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxAndroidSchedulersResetSchedulersTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)reset {
  [((RxAndroidPluginsRxAndroidPlugins *) nil_chk(RxAndroidPluginsRxAndroidPlugins_getInstance())) reset];
  RxSchedulersTestScheduler *testScheduler = create_RxSchedulersTestScheduler_init();
  [((RxAndroidPluginsRxAndroidPlugins *) nil_chk(RxAndroidPluginsRxAndroidPlugins_getInstance())) registerSchedulersHookWithRxAndroidPluginsRxAndroidSchedulersHook:create_RxAndroidSchedulersResetSchedulersTest_1_initWithRxSchedulersTestScheduler_(testScheduler)];
  RxAndroidSchedulersAndroidSchedulers_reset();
  OrgJunitAssert_assertSameWithId_withId_(RxAndroidSchedulersAndroidSchedulers_mainThread(), testScheduler);
  [((RxAndroidPluginsRxAndroidPlugins *) nil_chk(RxAndroidPluginsRxAndroidPlugins_getInstance())) reset];
  [((RxAndroidPluginsRxAndroidPlugins *) nil_chk(RxAndroidPluginsRxAndroidPlugins_getInstance())) registerSchedulersHookWithRxAndroidPluginsRxAndroidSchedulersHook:RxAndroidPluginsRxAndroidSchedulersHook_getDefaultInstance()];
  RxAndroidSchedulersAndroidSchedulers_reset();
  OrgJunitAssert_assertTrueWithBoolean_([RxAndroidSchedulersAndroidSchedulers_mainThread() isKindOfClass:[RxAndroidSchedulersLooperScheduler class]]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RxAndroidSchedulersResetSchedulersTest__Annotations$0, (void *)&RxAndroidSchedulersResetSchedulersTest__Annotations$1 };
  static const J2ObjcClassInfo _RxAndroidSchedulersResetSchedulersTest = { "ResetSchedulersTest", "rx.android.schedulers", ptrTable, methods, NULL, 7, 0x11, 2, 0, -1, -1, -1, -1, 1 };
  return &_RxAndroidSchedulersResetSchedulersTest;
}

@end

void RxAndroidSchedulersResetSchedulersTest_init(RxAndroidSchedulersResetSchedulersTest *self) {
  NSObject_init(self);
}

RxAndroidSchedulersResetSchedulersTest *new_RxAndroidSchedulersResetSchedulersTest_init() {
  J2OBJC_NEW_IMPL(RxAndroidSchedulersResetSchedulersTest, init)
}

RxAndroidSchedulersResetSchedulersTest *create_RxAndroidSchedulersResetSchedulersTest_init() {
  J2OBJC_CREATE_IMPL(RxAndroidSchedulersResetSchedulersTest, init)
}

IOSObjectArray *RxAndroidSchedulersResetSchedulersTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RxAndroidSchedulersResetSchedulersTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(CoTouchlabDopplTestingDopplRobolectricTestRunner_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxAndroidSchedulersResetSchedulersTest)

@implementation RxAndroidSchedulersResetSchedulersTest_1

- (instancetype)initWithRxSchedulersTestScheduler:(RxSchedulersTestScheduler *)capture$0 {
  RxAndroidSchedulersResetSchedulersTest_1_initWithRxSchedulersTestScheduler_(self, capture$0);
  return self;
}

- (RxScheduler *)getMainThreadScheduler {
  return val$testScheduler_;
}

- (void)dealloc {
  RELEASE_(val$testScheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRxScheduler;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRxSchedulersTestScheduler:);
  methods[1].selector = @selector(getMainThreadScheduler);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$testScheduler_", "LRxSchedulersTestScheduler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRxAndroidSchedulersResetSchedulersTest;", "reset" };
  static const J2ObjcClassInfo _RxAndroidSchedulersResetSchedulersTest_1 = { "", "rx.android.schedulers", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_RxAndroidSchedulersResetSchedulersTest_1;
}

@end

void RxAndroidSchedulersResetSchedulersTest_1_initWithRxSchedulersTestScheduler_(RxAndroidSchedulersResetSchedulersTest_1 *self, RxSchedulersTestScheduler *capture$0) {
  JreStrongAssign(&self->val$testScheduler_, capture$0);
  RxAndroidPluginsRxAndroidSchedulersHook_init(self);
}

RxAndroidSchedulersResetSchedulersTest_1 *new_RxAndroidSchedulersResetSchedulersTest_1_initWithRxSchedulersTestScheduler_(RxSchedulersTestScheduler *capture$0) {
  J2OBJC_NEW_IMPL(RxAndroidSchedulersResetSchedulersTest_1, initWithRxSchedulersTestScheduler_, capture$0)
}

RxAndroidSchedulersResetSchedulersTest_1 *create_RxAndroidSchedulersResetSchedulersTest_1_initWithRxSchedulersTestScheduler_(RxSchedulersTestScheduler *capture$0) {
  J2OBJC_CREATE_IMPL(RxAndroidSchedulersResetSchedulersTest_1, initWithRxSchedulersTestScheduler_, capture$0)
}
